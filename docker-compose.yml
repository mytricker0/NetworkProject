services:
  tor:
    image: dperson/torproxy
    container_name: tor
    restart: unless-stopped
    # expose:
    #   - "9050"  # SOCKS5 proxy
    #   - "9051"  # Control port
    ports:
      - "9050:9050"  # SOCKS5 proxy
      - "9051:9051"  # Control port
    command: -p "ergqewrgqerwgqwergwerg3er"
    environment:
      - TZ=Europe/Brussels


   

  puppeteer_tor:
    build: ./puppeteer_tor
    container_name: puppeteer_tor
    volumes:
      - ./puppeteer_tor:/app
      # - tor-data:/var/lib/tor
      - /tmp/.X11-unix:/tmp/.X11-unix
    # networks:
    #   - tornet
    env_file:
      - .env
    environment:
      - DISPLAY=${DISPLAY}
    network_mode: host  # necessary to use host X11 socket
    privileged: true    # needed for Chromium sandboxing
   
  i2p:
    image: geti2p/i2p
    container_name: i2p
    volumes:
      - i2p-data:/i2p/.i2p
      # - ./i2pconfig:/i2p/.i2p
    cap_add:
    - SYS_ADMIN
    environment:
      - JVM_XMX=256m                 # optional — adjust Java heap size
      - TZ=Europe/Brussels
      - EXT_PORT=12345                  # UDP/TCP port for I2P network reachability
      - JAVA_OPTS=-Di2p.router.forceShutdown=true \
                  -Drouter.forceRebuild=true \
                  -Di2p.router.startupDelay=0 \
                  -Drouter.disableReseed=false \
                  -Di2p.reseed.enable=true
    ports:
      - "0.0.0.0:7657:7657"           # Router console (web UI)
      - "0.0.0.0:4444:4444"           # HTTP proxy for eepsites
      - "12345:12345"                   # I2NP port – for peer connectivity
      - "12345:12345/udp"               # I2NP also needs UDP open
    restart: unless-stopped

  i2p_configurator:
    build:
      context: ./puppeteer_tor
    depends_on:
      - i2p
    working_dir: /app
    command: ["node", "init-i2p-subscriptions.js"]
    volumes:
      - i2p-data:/i2p/.i2p
    restart: "no"


volumes:
  i2p-data:
    